<?xml version="1.0" encoding="UTF-8"?>
<issues format="5" by="lint 3.3.1">

    <issue
        id="LintError"
        severity="Error"
        message="Unknown issue id &quot;InlineApi&quot;"
        category="Lint"
        priority="10"
        summary="Lint Failure"
        explanation="This issue type represents a problem running lint itself. Examples include failure to find bytecode for source files (which means certain detectors could not be run), parsing errors in lint configuration files, etc.&#xA;&#xA;These errors are not errors in your own code, but they are shown to make it clear that some checks were not completed.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\build.gradle"
            line="156"
            column="30"/>
    </issue>

    <issue
        id="LintError"
        severity="Error"
        message="Unexpected failure during lint analysis of module-info.class (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;Stack: `NullPointerException:InvalidPackageDetector.checkClass(InvalidPackageDetector.java:112)←AsmVisitor.runClassDetectors(AsmVisitor.java:154)←LintDriver.runClassDetectors(LintDriver.kt:1461)←LintDriver.checkClasses(LintDriver.kt:1329)←LintDriver.runFileDetectors(LintDriver.kt:1096)←LintDriver.checkProject(LintDriver.kt:895)←LintDriver.analyze(LintDriver.kt:416)←LintCliClient.run(LintCliClient.java:235)`&#xA;&#xA;You can set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout."
        category="Lint"
        priority="10"
        summary="Lint Failure"
        explanation="This issue type represents a problem running lint itself. Examples include failure to find bytecode for source files (which means certain detectors could not be run), parsing errors in lint configuration files, etc.&#xA;&#xA;These errors are not errors in your own code, but they are shown to make it clear that some checks were not completed.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\module-info.class"/>
    </issue>

    <issue
        id="ObsoleteLintCustomCheck"
        severity="Warning"
        message="Lint found an issue registry (`androidx.appcompat.AppCompatIssueRegistry`) which requires a newer API level. That means that the custom lint checks are intended for a newer lint version; please upgrade"
        category="Lint"
        priority="10"
        summary="Obsolete custom lint check"
        explanation="Lint can be extended with &quot;custom checks&quot;: additional checks implemented by developers and libraries to for example enforce specific API usages required by a library or a company coding style guideline.&#xA;&#xA;The Lint APIs are not yet stable, so these checks may either cause a performance degradation, or stop working, or provide wrong results.&#xA;&#xA;This warning flags custom lint checks that are found to be using obsolete APIs and will need to be updated to run in the current lint environment.&#xA;&#xA;It may also flag issues found to be using a **newer** version of the API, meaning that you need to use a newer version of lint (or Android Studio or Gradle plugin etc) to work with these checks.">
        <location
            file="C:\Users\Administrator\.gradle\caches\transforms-2\files-2.1\ba4627188f03ea12850b3d03e438c31b\jars\lint.jar"/>
    </issue>

    <issue
        id="InlinedApi"
        severity="Error"
        message="Field requires API level 21 (current min is 19): `android.media.MediaRecorder.VideoSource#SURFACE`"
        category="Correctness"
        priority="6"
        summary="Using inlined constants on older versions"
        explanation="This check scans through all the Android API field references in the application and flags certain constants, such as static final integers and Strings, which were introduced in later versions. These will actually be copied into the class files rather than being referenced, which means that the value is available even when running on older devices. In some cases that&apos;s fine, and in other cases it can result in a runtime crash or incorrect behavior. It depends on the context, so consider the code carefully and decide whether it&apos;s safe and can be suppressed or whether the code needs to be guarded.&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="238"
            column="43"/>
    </issue>

    <issue
        id="MissingConstraints"
        severity="Error"
        message="This view is not constrained vertically: at runtime it will jump to the top unless you add a vertical constraint"
        category="Correctness"
        priority="6"
        summary="Missing Constraints in ConstraintLayout"
        explanation="The layout editor allows you to place widgets anywhere on the canvas, and it records the current position with designtime attributes (such as `layout_editor_absoluteX`). These attributes are **not** applied at runtime, so if you push your layout on a device, the widgets may appear in a different location than shown in the editor. To fix this, make sure a widget has both horizontal and vertical constraints by dragging from the edge connections.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="11"
            column="6"/>
    </issue>

    <issue
        id="NewApi"
        severity="Fatal"
        message="Call requires API level 21 (current min is 19): android.media.projection.MediaProjectionManager#getMediaProjection"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on **all** versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-v`*NN* folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="207"
            column="54"/>
    </issue>

    <issue
        id="NewApi"
        severity="Fatal"
        message="Call requires API level 21 (current min is 19): `MediaProjectionCallback`"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on **all** versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-v`*NN* folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="208"
            column="39"/>
    </issue>

    <issue
        id="NewApi"
        severity="Fatal"
        message="Call requires API level 21 (current min is 19): android.media.projection.MediaProjection#registerCallback"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on **all** versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-v`*NN* folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="209"
            column="29"/>
    </issue>

    <issue
        id="NewApi"
        severity="Fatal"
        message="Call requires API level 21 (current min is 19): android.media.projection.MediaProjection#createVirtualDisplay"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on **all** versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-v`*NN* folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="227"
            column="46"/>
    </issue>

    <issue
        id="NewApi"
        severity="Fatal"
        message="Call requires API level 21 (current min is 19): android.media.MediaRecorder#getSurface"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on **all** versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-v`*NN* folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="228"
            column="38"/>
    </issue>

    <issue
        id="PrivateApi"
        severity="Error"
        message="Accessing internal APIs via reflection is not supported and may not work on all devices or in the future"
        category="Correctness"
        priority="6"
        summary="Using Private APIs"
        explanation="Using reflection to access hidden/private Android APIs is not safe; it will often not work on devices from other vendors, and it may suddenly stop working (if the API is removed) or crash spectacularly (if the API behavior changes, since there are no guarantees for compatibility).">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\TinkerActivity.java"
            line="62"
            column="42"/>
    </issue>

    <issue
        id="PrivateApi"
        severity="Error"
        message="Accessing internal APIs via reflection is not supported and may not work on all devices or in the future"
        category="Correctness"
        priority="6"
        summary="Using Private APIs"
        explanation="Using reflection to access hidden/private Android APIs is not safe; it will often not work on devices from other vendors, and it may suddenly stop working (if the API is removed) or crash spectacularly (if the API behavior changes, since there are no guarantees for compatibility).">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\TinkerActivity.java"
            line="66"
            column="47"/>
    </issue>

    <issue
        id="SdCardPath"
        severity="Error"
        message="Do not hardcode &quot;/sdcard/&quot;; use `Environment.getExternalStorageDirectory().getPath()` instead"
        category="Correctness"
        priority="6"
        summary="Hardcoded reference to `/sdcard`"
        explanation="Your code should not reference the `/sdcard` path directly; instead use `Environment.getExternalStorageDirectory().getPath()`.&#xA;&#xA;Similarly, do not reference the `/data/data/` path directly; it can vary in multi-user scenarios. Instead, use `Context.getFilesDir().getPath()`."
        url="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal"
        urls="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\CustomPlayVideoActivity.java"
            line="51"
            column="29"/>
    </issue>

    <issue
        id="SdCardPath"
        severity="Error"
        message="Do not hardcode &quot;/sdcard/&quot;; use `Environment.getExternalStorageDirectory().getPath()` instead"
        category="Correctness"
        priority="6"
        summary="Hardcoded reference to `/sdcard`"
        explanation="Your code should not reference the `/sdcard` path directly; instead use `Environment.getExternalStorageDirectory().getPath()`.&#xA;&#xA;Similarly, do not reference the `/data/data/` path directly; it can vary in multi-user scenarios. Instead, use `Context.getFilesDir().getPath()`."
        url="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal"
        urls="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="887"
            column="47"/>
    </issue>

    <issue
        id="SdCardPath"
        severity="Error"
        message="Do not hardcode &quot;/sdcard/&quot;; use `Environment.getExternalStorageDirectory().getPath()` instead"
        category="Correctness"
        priority="6"
        summary="Hardcoded reference to `/sdcard`"
        explanation="Your code should not reference the `/sdcard` path directly; instead use `Environment.getExternalStorageDirectory().getPath()`.&#xA;&#xA;Similarly, do not reference the `/data/data/` path directly; it can vary in multi-user scenarios. Instead, use `Context.getFilesDir().getPath()`."
        url="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal"
        urls="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="887"
            column="68"/>
    </issue>

    <issue
        id="SdCardPath"
        severity="Error"
        message="Do not hardcode &quot;/sdcard/&quot;; use `Environment.getExternalStorageDirectory().getPath()` instead"
        category="Correctness"
        priority="6"
        summary="Hardcoded reference to `/sdcard`"
        explanation="Your code should not reference the `/sdcard` path directly; instead use `Environment.getExternalStorageDirectory().getPath()`.&#xA;&#xA;Similarly, do not reference the `/data/data/` path directly; it can vary in multi-user scenarios. Instead, use `Context.getFilesDir().getPath()`."
        url="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal"
        urls="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1045"
            column="42"/>
    </issue>

    <issue
        id="SdCardPath"
        severity="Error"
        message="Do not hardcode &quot;/sdcard/&quot;; use `Environment.getExternalStorageDirectory().getPath()` instead"
        category="Correctness"
        priority="6"
        summary="Hardcoded reference to `/sdcard`"
        explanation="Your code should not reference the `/sdcard` path directly; instead use `Environment.getExternalStorageDirectory().getPath()`.&#xA;&#xA;Similarly, do not reference the `/data/data/` path directly; it can vary in multi-user scenarios. Instead, use `Context.getFilesDir().getPath()`."
        url="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal"
        urls="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1063"
            column="57"/>
    </issue>

    <issue
        id="ShowToast"
        severity="Error"
        message="Expected duration `Toast.LENGTH_SHORT` or `Toast.LENGTH_LONG`, a custom duration value is not supported"
        category="Correctness"
        priority="6"
        summary="Toast created but not shown"
        explanation="`Toast.makeText()` creates a `Toast` but does **not** show it. You must call `show()` on the resulting object to actually make the `Toast` appear.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SurfaceViewActivity.java"
            line="124"
            column="67"/>
    </issue>

    <issue
        id="SimpleDateFormat"
        severity="Error"
        message="To get local formatting use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()`, or use `new SimpleDateFormat(String template, Locale locale)` with for example `Locale.US` for ASCII dates."
        category="Correctness"
        priority="6"
        summary="Implied locale in date format"
        explanation="Almost all callers should use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()` to get a ready-made instance of SimpleDateFormat suitable for the user&apos;s locale. The main reason you&apos;d create an instance this class directly is because you need to format/parse a specific machine-readable format, in which case you almost certainly want to explicitly ask for US to ensure that you get ASCII digits (rather than, say, Arabic digits).&#xA;&#xA;Therefore, you should either use the form of the SimpleDateFormat constructor where you pass in an explicit locale, such as Locale.US, or use one of the get instance methods, or suppress this error if really know what you are doing."
        url="http://developer.android.com/reference/java/text/SimpleDateFormat.html"
        urls="http://developer.android.com/reference/java/text/SimpleDateFormat.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MapActivity.java"
            line="75"
            column="27"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `foregroundServiceType` is only used in API level 29 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\AndroidManifest.xml"
            line="96"
            column="13"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `viewportWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="5"
            column="5"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `viewportHeight` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="6"
            column="5"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="9"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="10"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="11"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="12"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="14"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="15"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="16"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="17"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="19"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="20"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="21"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="22"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="24"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="25"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="26"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="27"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="29"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="30"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="31"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="32"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="34"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="35"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="36"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="37"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="39"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="40"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="41"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="42"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="44"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="45"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="46"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="47"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="49"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="50"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="51"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="52"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="54"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="55"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="56"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="57"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="59"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="60"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="61"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="62"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="64"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="65"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="66"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="67"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="69"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="70"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="71"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="72"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="74"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="75"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="76"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="77"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="79"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="80"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="81"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="82"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="84"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="85"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="86"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="87"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="89"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="90"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="91"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="92"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="94"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="95"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="96"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="97"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="99"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="100"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="101"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="102"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="104"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="105"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="106"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="107"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="109"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="110"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="111"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="112"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="114"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="115"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="116"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="117"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="119"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="120"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="121"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="122"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="124"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="125"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="126"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="127"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="129"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="130"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="131"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="132"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="134"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="135"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="136"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="137"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="139"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="140"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="141"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="142"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="144"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="145"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="146"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="147"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="149"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="150"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="151"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="152"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="154"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="155"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="156"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="157"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="159"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="160"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="161"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="162"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="164"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="165"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="166"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="167"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="169"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="170"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="171"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="172"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `fillColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="174"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeColor` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="175"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `strokeWidth` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="176"
            column="9"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Error"
        message="Attribute `pathData` is only used in API level 21 and higher (current min is 19)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="177"
            column="9"/>
    </issue>

    <issue
        id="WrongConstant"
        severity="Error"
        message="Must be one of: ImageFormat.UNKNOWN, ImageFormat.RGB_565, ImageFormat.YV12, ImageFormat.Y8, ImageFormat.NV16, ImageFormat.NV21, ImageFormat.YUY2, ImageFormat.JPEG, ImageFormat.DEPTH_JPEG, ImageFormat.YUV_420_888, ImageFormat.YUV_422_888, ImageFormat.YUV_444_888, ImageFormat.FLEX_RGB_888, ImageFormat.FLEX_RGBA_8888, ImageFormat.RAW_SENSOR, ImageFormat.RAW_PRIVATE, ImageFormat.RAW10, ImageFormat.RAW12, ImageFormat.DEPTH16, ImageFormat.DEPTH_POINT_CLOUD, ImageFormat.PRIVATE, ImageFormat.HEIC"
        category="Correctness"
        priority="6"
        summary="Incorrect constant"
        explanation="Ensures that when parameter in a method only allows a specific set of constants, calls obey those rules.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="222"
            column="68"/>
    </issue>

    <issue
        id="WrongConstant"
        severity="Error"
        message="Must be one of: Toast.LENGTH_SHORT, Toast.LENGTH_LONG"
        category="Correctness"
        priority="6"
        summary="Incorrect constant"
        explanation="Ensures that when parameter in a method only allows a specific set of constants, calls obey those rules.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SurfaceViewActivity.java"
            line="124"
            column="67"/>
    </issue>

    <issue
        id="VectorDrawableCompat"
        severity="Error"
        message="When using VectorDrawableCompat, you need to use `app:srcCompat`."
        category="Correctness"
        priority="5"
        summary="Using VectorDrawableCompat"
        explanation="To use VectorDrawableCompat, you need to make two modifications to your project. First, set `android.defaultConfig.vectorDrawables.useSupportLibrary = true` in your `build.gradle` file, and second, use `app:srcCompat` instead of `android:src` to refer to vector drawables."
        url="http://chris.banes.me/2016/02/25/appcompat-vector/#enabling-the-flag"
        urls="http://chris.banes.me/2016/02/25/appcompat-vector/#enabling-the-flag">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\login_layout.xml"
            line="10"
            column="9"/>
    </issue>

    <issue
        id="VectorDrawableCompat"
        severity="Error"
        message="When using VectorDrawableCompat, you need to use `app:srcCompat`."
        category="Correctness"
        priority="5"
        summary="Using VectorDrawableCompat"
        explanation="To use VectorDrawableCompat, you need to make two modifications to your project. First, set `android.defaultConfig.vectorDrawables.useSupportLibrary = true` in your `build.gradle` file, and second, use `app:srcCompat` instead of `android:src` to refer to vector drawables."
        url="http://chris.banes.me/2016/02/25/appcompat-vector/#enabling-the-flag"
        urls="http://chris.banes.me/2016/02/25/appcompat-vector/#enabling-the-flag">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sun_system.xml"
            line="13"
            column="9"/>
    </issue>

    <issue
        id="VectorDrawableCompat"
        severity="Error"
        message="When using VectorDrawableCompat, you need to use `app:srcCompat`."
        category="Correctness"
        priority="5"
        summary="Using VectorDrawableCompat"
        explanation="To use VectorDrawableCompat, you need to make two modifications to your project. First, set `android.defaultConfig.vectorDrawables.useSupportLibrary = true` in your `build.gradle` file, and second, use `app:srcCompat` instead of `android:src` to refer to vector drawables."
        url="http://chris.banes.me/2016/02/25/appcompat-vector/#enabling-the-flag"
        urls="http://chris.banes.me/2016/02/25/appcompat-vector/#enabling-the-flag">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sun_system.xml"
            line="23"
            column="9"/>
    </issue>

    <issue
        id="ExtraText"
        severity="Error"
        message="Unexpected text found in layout file: &quot;﻿&quot;"
        category="Correctness"
        priority="3"
        summary="Extraneous text in resource files"
        explanation="Layout resource files should only contain elements and attributes. Any XML text content found in the file is likely accidental (and potentially dangerous if the text resembles XML and the developer believes the text to be functional)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\AndroidManifest.xml"
            line="30"
            column="5"/>
    </issue>

    <issue
        id="ExtraText"
        severity="Error"
        message="Unexpected text found in layout file: &quot;>&quot;"
        category="Correctness"
        priority="3"
        summary="Extraneous text in resource files"
        explanation="Layout resource files should only contain elements and attributes. Any XML text content found in the file is likely accidental (and potentially dangerous if the text resembles XML and the developer believes the text to be functional)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="134"
            column="13"/>
    </issue>

    <issue
        id="ExtraText"
        severity="Error"
        message="Unexpected text found in layout file: &quot;>&quot;"
        category="Correctness"
        priority="3"
        summary="Extraneous text in resource files"
        explanation="Layout resource files should only contain elements and attributes. Any XML text content found in the file is likely accidental (and potentially dangerous if the text resembles XML and the developer believes the text to be functional)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\main_activity2_activity.xml"
            line="38"
            column="13"/>
    </issue>

    <issue
        id="PrivateResource"
        severity="Error"
        message="The resource `@drawable/abc_vector_test` is marked as private in com.google.android.material:material"
        category="Correctness"
        priority="3"
        summary="Using private resources"
        explanation="Private resources should not be referenced; the may not be present everywhere, and even where they are they may disappear without notice.&#xA;&#xA;To fix this, copy the resource into your own project instead.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_motion2.xml"
            line="15"
            column="22"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Error"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="150"
            column="9"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Error"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\login_layout.xml"
            line="24"
            column="9"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Error"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\login_layout.xml"
            line="41"
            column="13"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Error"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sound_set_layout.xml"
            line="17"
            column="9"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Error"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sound_set_layout.xml"
            line="35"
            column="13"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Error"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sound_set_layout.xml"
            line="46"
            column="13"/>
    </issue>

    <issue
        id="Orientation"
        severity="Error"
        message="No orientation specified, and the default is horizontal. This is a common source of bugs when children are added dynamically."
        category="Correctness"
        priority="2"
        summary="Missing explicit orientation"
        explanation="The default orientation of a LinearLayout is horizontal. It&apos;s pretty easy to believe that the layout is vertical, add multiple children to it, and wonder why only the first child is visible (when the subsequent children are off screen to the right). This lint rule helps pinpoint this issue by warning whenever a LinearLayout is used with an implicit orientation and multiple children.&#xA;&#xA;It also checks for empty LinearLayouts without an `orientation` attribute that also defines an `id` attribute. This catches the scenarios where children will be added to the `LinearLayout` dynamically. ">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_image_show.xml"
            line="2"
            column="2"/>
    </issue>

    <issue
        id="PermissionImpliesUnsupportedChromeOsHardware"
        severity="Error"
        message="Permission exists without corresponding hardware `&lt;uses-feature android:name=&quot;android.hardware.camera&quot; required=&quot;false&quot;>` tag."
        category="Correctness:Chrome OS"
        priority="3"
        summary="Permission Implies Unsupported Chrome OS Hardware"
        explanation="The `&lt;uses-permission>` element should not require a permission that implies an unsupported Chrome OS hardware feature. Google Play assumes that certain hardware related permissions indicate that the underlying hardware features are required by default. To fix the issue, consider declaring the corresponding uses-feature element with `required=&quot;false&quot;` attribute."
        url="https://developer.android.com/topic/arc/manifest.html#implied-features"
        urls="https://developer.android.com/topic/arc/manifest.html#implied-features">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\AndroidManifest.xml"
            line="11"
            column="6"/>
    </issue>

    <issue
        id="PermissionImpliesUnsupportedChromeOsHardware"
        severity="Error"
        message="Permission exists without corresponding hardware `&lt;uses-feature android:name=&quot;android.hardware.camera.autofocus&quot; required=&quot;false&quot;>` tag."
        category="Correctness:Chrome OS"
        priority="3"
        summary="Permission Implies Unsupported Chrome OS Hardware"
        explanation="The `&lt;uses-permission>` element should not require a permission that implies an unsupported Chrome OS hardware feature. Google Play assumes that certain hardware related permissions indicate that the underlying hardware features are required by default. To fix the issue, consider declaring the corresponding uses-feature element with `required=&quot;false&quot;` attribute."
        url="https://developer.android.com/topic/arc/manifest.html#implied-features"
        urls="https://developer.android.com/topic/arc/manifest.html#implied-features">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\AndroidManifest.xml"
            line="11"
            column="6"/>
    </issue>

    <issue
        id="UnsafeProtectedBroadcastReceiver"
        severity="Error"
        message="This broadcast receiver declares an intent-filter for a protected broadcast action string, which can only be sent by the system, not third-party applications. However, the receiver&apos;s onReceive method does not appear to call getAction to ensure that the received Intent&apos;s action string matches the expected value, potentially making it possible for another actor to send a spoofed intent with no action string or a different action string and cause undesired behavior. In this case, it is possible that the onReceive method passed the received Intent to another method that checked the action string. If so, this finding can safely be ignored."
        category="Security"
        priority="6"
        summary="Unsafe Protected BroadcastReceiver"
        explanation="BroadcastReceivers that declare an intent-filter for a protected-broadcast action string must check that the received intent&apos;s action string matches the expected value, otherwise it is possible for malicious actors to spoof intents.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\LockReceiver.java"
            line="20"
            column="17"/>
    </issue>

    <issue
        id="AllowBackup"
        severity="Error"
        message="On SDK version 23 and up, your app data will be automatically backed up and restored on app install. Consider adding the attribute `android:fullBackupContent` to specify an `@xml` resource which configures which files to backup. More info: https://developer.android.com/training/backup/autosyncapi.html"
        category="Security"
        priority="3"
        summary="AllowBackup/FullBackupContent Problems"
        explanation="The `allowBackup` attribute determines if an application&apos;s data can be backed up and restored. It is documented at http://developer.android.com/reference/android/R.attr.html#allowBackup&#xA;&#xA;By default, this flag is set to `true`. When this flag is set to `true`, application data can be backed up and restored by the user using `adb backup` and `adb restore`.&#xA;&#xA;This may have security consequences for an application. `adb backup` allows users who have enabled USB debugging to copy application data off of the device. Once backed up, all application data can be read by the user. `adb restore` allows creation of application data from a source specified by the user. Following a restore, applications should not assume that the data, file permissions, and directory permissions were created by the application itself.&#xA;&#xA;Setting `allowBackup=&quot;false&quot;` opts an application out of both backup and restore.&#xA;&#xA;To fix this warning, decide whether your application should support backup, and explicitly set `android:allowBackup=(true|false)&quot;`.&#xA;&#xA;If not set to false, and if targeting API 23 or later, lint will also warn that you should set `android:fullBackupContent` to configure auto backup."
        url="https://developer.android.com/training/backup/autosyncapi.html"
        urls="https://developer.android.com/training/backup/autosyncapi.html,http://developer.android.com/reference/android/R.attr.html#allowBackup">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\AndroidManifest.xml"
            line="30"
            column="6"/>
    </issue>

    <issue
        id="DrawAllocation"
        severity="Error"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance"
        priority="9"
        summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\CubeView.java"
            line="87"
            column="25"/>
    </issue>

    <issue
        id="DrawAllocation"
        severity="Error"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance"
        priority="9"
        summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\CubeView.java"
            line="115"
            column="23"/>
    </issue>

    <issue
        id="DrawAllocation"
        severity="Error"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance"
        priority="9"
        summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\CustomEditText.java"
            line="48"
            column="27"/>
    </issue>

    <issue
        id="DrawAllocation"
        severity="Error"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance"
        priority="9"
        summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\DayContainer.java"
            line="31"
            column="23"/>
    </issue>

    <issue
        id="DrawAllocation"
        severity="Error"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance"
        priority="9"
        summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourViewGroup.java"
            line="70"
            column="34"/>
    </issue>

    <issue
        id="DrawAllocation"
        severity="Error"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance"
        priority="9"
        summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\WeekContainer.java"
            line="78"
            column="18"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Error"
        message="Unnecessary; SDK_INT is never &lt; 19"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1370"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Error"
        message="Unnecessary; SDK_INT is always >= 19"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1377"
            column="13"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Error"
        message="Do not place Android context classes in static fields; this is a memory leak (and also breaks Instant Run)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\BaseApplication.java"
            line="47"
            column="13"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Error"
        message="Do not place Android context classes in static fields (static reference to `BroadCastUtils` which has field `mContext` pointing to `Context`); this is a memory leak (and also breaks Instant Run)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\BroadCastUtils.java"
            line="20"
            column="22"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Error"
        message="This AsyncTask class should be static or leaks might occur (anonymous android.os.AsyncTask)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="526"
            column="9"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Error"
        message="This AsyncTask class should be static or leaks might occur (anonymous android.os.AsyncTask)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1033"
            column="21"/>
    </issue>

    <issue
        id="UnpackedNativeCode"
        severity="Error"
        message="Missing attribute android:extractNativeLibs=&quot;false&quot; on the `&lt;application>` tag."
        category="Performance"
        priority="6"
        summary="Missing `android:extractNativeLibs=false`"
        explanation="This app loads native libraries using `System.loadLibrary()`.&#xA;&#xA;Consider adding `android:extractNativeLibs=&quot;false&quot;` to the `&lt;application>` tag in AndroidManifest.xml. Starting with Android 6.0, this will make installation faster, the app will take up less space on the device and updates will have smaller download sizes.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\AndroidManifest.xml"
            line="30"
            column="5"/>
    </issue>

    <issue
        id="LogConditional"
        severity="Error"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        category="Performance"
        priority="5"
        summary="Unconditional Logging Calls"
        explanation="The BuildConfig class (available in Tools 17) provides a constant, &quot;DEBUG&quot;, which indicates whether the code is being built in release mode or in debug mode. In release mode, you typically want to strip out all the logging calls. Since the compiler will automatically remove all code which is inside a &quot;if (false)&quot; check, surrounding your logging calls with a check for BuildConfig.DEBUG is a good idea.&#xA;&#xA;If you **really** intend for the logging to be present in release mode, you can suppress this warning with a @SuppressLint annotation for the intentional logging calls.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgView.java"
            line="191"
            column="21"/>
    </issue>

    <issue
        id="LogConditional"
        severity="Error"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        category="Performance"
        priority="5"
        summary="Unconditional Logging Calls"
        explanation="The BuildConfig class (available in Tools 17) provides a constant, &quot;DEBUG&quot;, which indicates whether the code is being built in release mode or in debug mode. In release mode, you typically want to strip out all the logging calls. Since the compiler will automatically remove all code which is inside a &quot;if (false)&quot; check, surrounding your logging calls with a check for BuildConfig.DEBUG is a good idea.&#xA;&#xA;If you **really** intend for the logging to be present in release mode, you can suppress this warning with a @SuppressLint annotation for the intentional logging calls.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgView.java"
            line="193"
            column="21"/>
    </issue>

    <issue
        id="LogConditional"
        severity="Error"
        message="The log call Log.d(...) should be conditional: surround with `if (Log.isLoggable(...))` or `if (BuildConfig.DEBUG) { ... }`"
        category="Performance"
        priority="5"
        summary="Unconditional Logging Calls"
        explanation="The BuildConfig class (available in Tools 17) provides a constant, &quot;DEBUG&quot;, which indicates whether the code is being built in release mode or in debug mode. In release mode, you typically want to strip out all the logging calls. Since the compiler will automatically remove all code which is inside a &quot;if (false)&quot; check, surrounding your logging calls with a check for BuildConfig.DEBUG is a good idea.&#xA;&#xA;If you **really** intend for the logging to be present in release mode, you can suppress this warning with a @SuppressLint annotation for the intentional logging calls.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgView.java"
            line="195"
            column="21"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (5515 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="12"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (1554 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="17"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (4875 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="22"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (5687 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="27"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (6464 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="32"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (10470 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="37"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (5351 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="42"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (4894 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="47"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (1297 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="52"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (6611 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="57"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (5509 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="62"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (11542 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="72"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (4902 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="77"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (6239 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="82"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (7520 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="87"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (3567 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="92"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (4745 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="97"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (5229 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="102"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (14011 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="112"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (3207 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="117"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (9135 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="122"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (6395 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="127"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (9809 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="132"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (5053 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="137"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (853 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="142"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (4207 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="147"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (1413 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="152"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (1437 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="157"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (10690 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="162"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (12185 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="167"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (9307 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="172"
            column="27"/>
    </issue>

    <issue
        id="VectorPath"
        severity="Error"
        message="Very long vector path (4859 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance"
        priority="5"
        summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\raw\chinahigh.xml"
            line="177"
            column="27"/>
    </issue>

    <issue
        id="HandlerLeak"
        severity="Error"
        message="This Handler class should be static or leaks might occur (anonymous android.os.Handler)"
        category="Performance"
        priority="4"
        summary="Handler reference leaks"
        explanation="Since this Handler is declared as an inner class, it may prevent the outer class from being garbage collected. If the Handler is using a Looper or MessageQueue for a thread other than the main thread, then there is no issue. If the Handler is using the Looper or MessageQueue of the main thread, you need to fix your Handler declaration, as follows: Declare the Handler as a static class; In the outer class, instantiate a WeakReference to the outer class and pass this object to your Handler when you instantiate the Handler; Make all references to members of the outer class using the WeakReference object.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\CubeView.java"
            line="56"
            column="23"/>
    </issue>

    <issue
        id="HandlerLeak"
        severity="Error"
        message="This Handler class should be static or leaks might occur (anonymous android.os.Handler)"
        category="Performance"
        priority="4"
        summary="Handler reference leaks"
        explanation="Since this Handler is declared as an inner class, it may prevent the outer class from being garbage collected. If the Handler is using a Looper or MessageQueue for a thread other than the main thread, then there is no issue. If the Handler is using the Looper or MessageQueue of the main thread, you need to fix your Handler declaration, as follows: Declare the Handler as a static class; In the outer class, instantiate a WeakReference to the outer class and pass this object to your Handler when you instantiate the Handler; Make all references to members of the outer class using the WeakReference object.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="707"
            column="32"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Error"
        message="Use new `SparseIntArray(...)` instead for better performance"
        category="Performance"
        priority="4"
        summary="HashMap can be replaced with SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.&#xA;&#xA;This is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.&#xA;&#xA;If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourViewGroup.java"
            line="39"
            column="26"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Error"
        message="Use `new SparseArray&lt;Integer>>(...)` instead for better performance"
        category="Performance"
        priority="4"
        summary="HashMap can be replaced with SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.&#xA;&#xA;This is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.&#xA;&#xA;If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourViewGroup.java"
            line="41"
            column="32"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Error"
        message="Use `new SparseArray&lt;String>(...)` instead for better performance"
        category="Performance"
        priority="4"
        summary="HashMap can be replaced with SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.&#xA;&#xA;This is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.&#xA;&#xA;If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\hook\TestA.java"
            line="72"
            column="35"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Error"
        message="Use `new SparseArray&lt;HourView>>(...)` instead for better performance"
        category="Performance"
        priority="4"
        summary="HashMap can be replaced with SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.&#xA;&#xA;This is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.&#xA;&#xA;If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\WeekContainer.java"
            line="113"
            column="42"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Error"
        message="Use `Integer.valueOf(5302256)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\test\Demo.java"
            line="72"
            column="28"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Error"
        message="Use `Integer.valueOf(5302256)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\test\Demo.java"
            line="82"
            column="29"/>
    </issue>

    <issue
        id="UseValueOf"
        severity="Error"
        message="Use `Integer.valueOf(0)` instead"
        category="Performance"
        priority="4"
        summary="Should use `valueOf` instead of `new`"
        explanation="You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\multiTread\Test1.java"
            line="37"
            column="30"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Error"
        message="Possible overdraw: Root element paints background `@color/colorPrimary` with a theme that also paints a background (inferred theme is `@style/AppTheme`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="7"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Error"
        message="Possible overdraw: Root element paints background `@color/black` with a theme that also paints a background (inferred theme is `@style/AppTheme`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_motion2.xml"
            line="8"
            column="5"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.layout.activity_motion` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_motion.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.layout.activity_motion2` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_motion2.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.xml.activity_motion2_scene` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\activity_motion2_scene.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.xml.activity_motion_scene` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\activity_motion_scene.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.layout.blue_item_layout` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\blue_item_layout.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.color.light_blue_400` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\colors.xml"
            line="8"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.color.light_blue_600` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\colors.xml"
            line="9"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.color.gray_400` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\colors.xml"
            line="10"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.color.gray_600` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\colors.xml"
            line="11"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.drawable.ic_baseline_sports_basketball_24` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\drawable\ic_baseline_sports_basketball_24.xml"
            line="1"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.AppRootTheme` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="44"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.AppBaseTheme` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="46"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.AppConfigTheme` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="65"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.QMUI` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="76"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.QMUI_Compat` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="406"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.ListViewBase_Compat` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="408"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.GridViewBase_Compat` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="410"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.ImageButtonBase_Compat` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="412"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.ButtonBase_Compat` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="414"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.EditTextBase_Compat` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="420"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.AutoCompleteTextViewBase_Compat` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="422"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.DropDownListViewBase_Compat` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="424"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.TextAppearanceBase` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="426"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.QMUI_NoActionBar` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="428"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.QMUI_Compat_NoActionBar` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="433"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.ListView_Compat` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="436"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.GridView_Compat` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="445"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.ImageButton_Compat` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="450"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.Button_Compat` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="454"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.EditText_Compat` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="456"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.TextView_Compat` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="463"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.AutoCompleteTextView_Compat` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="470"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.DropDownListView_Compat` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\qmui_themes.xml"
            line="478"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.layout.rotate_button` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\rotate_button.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.xml.rotate_button_scene` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\rotate_button_scene.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.layout.sample_my_view` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sample_my_view.xml"
            line="1"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.drawable.selectedbg` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\drawable\selectedbg.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.style.Widget.AppTheme.MyView` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values\styles.xml"
            line="38"
            column="12"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\values-night\styles.xml"
            line="3"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.layout.sun_system` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sun_system.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.xml.sun_system_scene` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\sun_system_scene.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `mBroadcastList` of class `BroadCastUtils` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\BroadCastUtils.java"
            line="97"
            column="20"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `broadCastCallBack` of class `BroadCastUtils` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\BroadCastUtils.java"
            line="98"
            column="17"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `disposable` of class `CubeView` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\CubeView.java"
            line="61"
            column="47"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` method `restartDrop` of class `CubeView` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\CubeView.java"
            line="62"
            column="17"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `mHolder` of class `GameSurfaceView` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\GameSurfaceView.java"
            line="124"
            column="35"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `mHolder` of class `GameSurfaceView` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\GameSurfaceView.java"
            line="125"
            column="34"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `mSprite` of class `GameSurfaceView` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\GameSurfaceView.java"
            line="127"
            column="25"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `mSprite` of class `GameSurfaceView` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\GameSurfaceView.java"
            line="129"
            column="25"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` method `drawSprite` of class `GameSurfaceView` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\GameSurfaceView.java"
            line="130"
            column="25"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `mHolder` of class `GameSurfaceView` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\GameSurfaceView.java"
            line="135"
            column="33"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `mHolder` of class `GameSurfaceView` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\GameSurfaceView.java"
            line="136"
            column="25"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` member of class `MediaProjectionCallback` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="208"
            column="39"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` method `showResult` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="311"
            column="17"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `iv` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="318"
            column="17"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` method `getWifiList` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="325"
            column="44"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` method `convertList` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="326"
            column="139"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` method `convert` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="327"
            column="24"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` method `showPassWordDialog` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="337"
            column="29"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `sound_change` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="449"
            column="25"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `sound_change` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="454"
            column="25"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` method `shutdownPhone` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="455"
            column="25"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` method `closeScreen` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="456"
            column="25"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` method `createNewApk` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="534"
            column="37"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` method `createWifiConfig` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="818"
            column="65"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `bitmap1` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1062"
            column="21"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `tessBaseAPI` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1063"
            column="40"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `bitmap1` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1088"
            column="35"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `iv` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1088"
            column="17"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `tessBaseAPI` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1092"
            column="21"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `tessBaseAPI` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1093"
            column="21"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `MY_UUID_INSECURE` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1170"
            column="105"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `state` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1188"
            column="20"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` method `connectBlue` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1189"
            column="21"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `MY_UUID_INSECURE` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1245"
            column="72"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `state` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1253"
            column="13"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` method `stopScreenRequest` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1283"
            column="9"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` method `encodeProcess` of class `MainActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1292"
            column="13"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` method `getGPS` of class `MapActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MapActivity.java"
            line="138"
            column="17"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `title` of class `Builder` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\build_pattern\Notification.java"
            line="10"
            column="25"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `content` of class `Builder` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\build_pattern\Notification.java"
            line="11"
            column="27"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `id` of class `Builder` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\build_pattern\Notification.java"
            line="12"
            column="22"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `color` of class `Builder` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\build_pattern\Notification.java"
            line="13"
            column="25"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` method `getMessage` of class `SocketServer` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\TCPDemo\SocketServer.java"
            line="49"
            column="31"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` method `getMessage` of class `SocketServer` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\TCPDemo\SocketServer.java"
            line="55"
            column="30"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` member of class `SurfaceCallback` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SurfaceViewActivity.java"
            line="62"
            column="45"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `path` of class `SurfaceViewActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SurfaceViewActivity.java"
            line="80"
            column="33"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `position` of class `SurfaceViewActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SurfaceViewActivity.java"
            line="80"
            column="17"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `position` of class `SurfaceViewActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SurfaceViewActivity.java"
            line="81"
            column="22"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` method `play` of class `SurfaceViewActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SurfaceViewActivity.java"
            line="81"
            column="17"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `position` of class `SurfaceViewActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SurfaceViewActivity.java"
            line="82"
            column="17"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `mediaPlayer` of class `SurfaceViewActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SurfaceViewActivity.java"
            line="88"
            column="17"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `mediaPlayer` of class `SurfaceViewActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SurfaceViewActivity.java"
            line="89"
            column="28"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `position` of class `SurfaceViewActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SurfaceViewActivity.java"
            line="89"
            column="17"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `mediaPlayer` of class `SurfaceViewActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SurfaceViewActivity.java"
            line="90"
            column="17"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `mediaPlayer` of class `SurfaceViewActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SurfaceViewActivity.java"
            line="176"
            column="13"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `mediaPlayer` of class `SurfaceViewActivity` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SurfaceViewActivity.java"
            line="177"
            column="28"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `context` of class `SvgView` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgView.java"
            line="145"
            column="45"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `resId` of class `SvgView` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgView.java"
            line="145"
            column="84"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `nameList` of class `SvgView` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgView.java"
            line="203"
            column="56"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `itemList` of class `SvgView` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgView.java"
            line="225"
            column="17"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `totalRect` of class `SvgView` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgView.java"
            line="227"
            column="17"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `threadPoolManager` of class `ThreadPoolClassLoader` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\multiTread\ThreadPoolManager.java"
            line="24"
            column="35"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` constructor of class `ThreadPoolManager` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\multiTread\ThreadPoolManager.java"
            line="27"
            column="63"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `mQueue` of class `ThreadPoolManager` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\multiTread\ThreadPoolManager.java"
            line="68"
            column="28"/>
    </issue>

    <issue
        id="SyntheticAccessor"
        severity="Error"
        message="Access to `private` field `threadPoolExecutor` of class `ThreadPoolManager` requires synthetic accessor"
        category="Performance"
        priority="2"
        summary="Synthetic Accessor"
        explanation="A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\multiTread\ThreadPoolManager.java"
            line="72"
            column="17"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.button1` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_motion.xml"
            line="11"
            column="9"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\activity_motion_scene.xml"
            line="21"
            column="13"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.button2` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_motion.xml"
            line="20"
            column="9"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\activity_motion_scene.xml"
            line="31"
            column="18"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\activity_motion_scene.xml"
            line="42"
            column="13"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.button3` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_motion.xml"
            line="35"
            column="9"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\activity_motion_scene.xml"
            line="10"
            column="18"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.linearLayout2` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_motion2.xml"
            line="5"
            column="5"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.image` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_motion2.xml"
            line="12"
            column="9"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\rotate_button.xml"
            line="9"
            column="9"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\activity_motion2_scene.xml"
            line="30"
            column="16"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\activity_motion2_scene.xml"
            line="40"
            column="13"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\activity_motion2_scene.xml"
            line="50"
            column="13"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\rotate_button_scene.xml"
            line="11"
            column="13"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\rotate_button_scene.xml"
            line="19"
            column="13"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\rotate_button_scene.xml"
            line="31"
            column="13"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.end1` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\activity_motion_scene.xml"
            line="7"
            column="9"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\activity_motion_scene.xml"
            line="19"
            column="20"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.start1` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\activity_motion_scene.xml"
            line="16"
            column="20"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.end2` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\activity_motion_scene.xml"
            line="28"
            column="9"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\activity_motion_scene.xml"
            line="40"
            column="20"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.start2` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\activity_motion_scene.xml"
            line="37"
            column="20"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.textView` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\blue_item_layout.xml"
            line="8"
            column="9"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.text` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\content_third.xml"
            line="12"
            column="9"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.button11` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\custom_relativelayout.xml"
            line="6"
            column="9"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.username` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\login_layout.xml"
            line="20"
            column="9"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.usr_name_edit` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\login_layout.xml"
            line="26"
            column="9"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.password` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\login_layout.xml"
            line="37"
            column="13"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.mainactivity2` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\main_activity2_fragment.xml"
            line="5"
            column="5"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.message` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\main_activity2_fragment.xml"
            line="11"
            column="9"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.sound_time` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sound_set_layout.xml"
            line="31"
            column="13"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.view1` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sun_run.xml"
            line="11"
            column="9"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.view2` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sun_run.xml"
            line="20"
            column="9"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.transition` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\sun_run_scene.xml"
            line="7"
            column="9"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.sun` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sun_system.xml"
            line="10"
            column="9"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.earth` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sun_system.xml"
            line="20"
            column="9"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\sun_system_scene.xml"
            line="16"
            column="13"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\sun_system_scene.xml"
            line="27"
            column="17"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\sun_system_scene.xml"
            line="34"
            column="17"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\sun_system_scene.xml"
            line="41"
            column="17"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\sun_system_scene.xml"
            line="47"
            column="17"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\sun_system_scene.xml"
            line="53"
            column="17"/>
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\xml\sun_system_scene.xml"
            line="60"
            column="17"/>
    </issue>

    <issue
        id="ConvertToWebp"
        severity="Error"
        message="One or more images in this project can be converted to the WebP format which typically results in smaller file sizes, even for lossless conversion (but launcher icons should use PNG)."
        category="Usability:Icons"
        priority="6"
        summary="Convert to WebP"
        explanation="The WebP format is typically more compact than PNG and JPEG. As of Android 4.2.1 it supports transparency and lossless conversion as well. Note that there is a quickfix in the IDE which lets you perform conversion.&#xA;&#xA;Launcher icons must be in the PNG format.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\drawable\timg.jpg"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Error"
        message="Found bitmap drawable `res/drawable/timg.jpg` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\drawable\timg.jpg"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Error"
        message="Found bitmap drawable `res/drawable/timg2.jpg` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\drawable\timg2.jpg"/>
    </issue>

    <issue
        id="SelectableText"
        severity="Error"
        message="Consider making the text value selectable by specifying `android:textIsSelectable=&quot;true&quot;`"
        category="Usability"
        priority="7"
        summary="Dynamic text should probably be selectable"
        explanation="If a `&lt;TextView>` is used to display data, the user might want to copy that data and paste it elsewhere. To allow this, the `&lt;TextView>` should specify `android:textIsSelectable=&quot;true&quot;`.&#xA;&#xA;This lint check looks for TextViews which are likely to be displaying data: views whose text is set dynamically. This value will be ignored on platforms older than API 11, so it is okay to set it regardless of your `minSdkVersion`.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="144"
            column="6"/>
    </issue>

    <issue
        id="SelectableText"
        severity="Error"
        message="Consider making the text value selectable by specifying `android:textIsSelectable=&quot;true&quot;`"
        category="Usability"
        priority="7"
        summary="Dynamic text should probably be selectable"
        explanation="If a `&lt;TextView>` is used to display data, the user might want to copy that data and paste it elsewhere. To allow this, the `&lt;TextView>` should specify `android:textIsSelectable=&quot;true&quot;`.&#xA;&#xA;This lint check looks for TextViews which are likely to be displaying data: views whose text is set dynamically. This value will be ignored on platforms older than API 11, so it is okay to set it regardless of your `minSdkVersion`.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_map.xml"
            line="28"
            column="10"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Error"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="28"
            column="14"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Error"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="33"
            column="14"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Error"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="38"
            column="14"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Error"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="43"
            column="14"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Error"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="55"
            column="10"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Error"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="60"
            column="14"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Error"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="65"
            column="14"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Error"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="70"
            column="14"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Error"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="83"
            column="14"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Error"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="88"
            column="14"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Error"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="93"
            column="14"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Error"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="98"
            column="14"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Error"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_surface_view.xml"
            line="22"
            column="6"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Error"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_surface_view.xml"
            line="27"
            column="6"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Error"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_surface_view.xml"
            line="32"
            column="6"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Error"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_surface_view.xml"
            line="37"
            column="6"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Error"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_tinker.xml"
            line="10"
            column="6"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Error"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_tinker.xml"
            line="17"
            column="6"/>
    </issue>

    <issue
        id="GoogleAppIndexingWarning"
        severity="Error"
        message="App is not indexable by Google Search; consider adding at least one Activity with an ACTION-VIEW intent filter. See issue explanation for more details."
        category="Usability"
        priority="5"
        summary="Missing support for Firebase App Indexing"
        explanation="Adds URLs to get your app into the Google index, to get installs and traffic to your app from Google Search."
        url="https://g.co/AppIndexing/AndroidStudio"
        urls="https://g.co/AppIndexing/AndroidStudio">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\AndroidManifest.xml"
            line="30"
            column="5"/>
    </issue>

    <issue
        id="TextFields"
        severity="Error"
        message="This text field does not specify an `inputType`"
        category="Usability"
        priority="5"
        summary="Missing `inputType`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). &#xA;&#xA;The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.&#xA;&#xA;If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_surface_view.xml"
            line="9"
            column="6"/>
    </issue>

    <issue
        id="Autofill"
        severity="Error"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_surface_view.xml"
            line="9"
            column="6"/>
    </issue>

    <issue
        id="ViewConstructor"
        severity="Error"
        message="Custom view `CubeView` is missing constructor used by tools: `(Context)` or `(Context,AttributeSet)` or `(Context,AttributeSet,int)`"
        category="Usability"
        priority="3"
        summary="Missing View constructors for XML inflation"
        explanation="Some layout tools (such as the Android layout editor) need to find a constructor with one of the following signatures:&#xA;* `View(Context context)`&#xA;* `View(Context context, AttributeSet attrs)`&#xA;* `View(Context context, AttributeSet attrs, int defStyle)`&#xA;&#xA;If your custom view needs to perform initialization which does not apply when used in a layout editor, you can surround the given code with a check to see if `View#isInEditMode()` is false, since that method will return `false` at runtime but true within a user interface editor.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\CubeView.java"
            line="35"
            column="14"/>
    </issue>

    <issue
        id="ViewConstructor"
        severity="Error"
        message="Custom view `HourViewGroup` is missing constructor used by tools: `(Context)` or `(Context,AttributeSet)` or `(Context,AttributeSet,int)`"
        category="Usability"
        priority="3"
        summary="Missing View constructors for XML inflation"
        explanation="Some layout tools (such as the Android layout editor) need to find a constructor with one of the following signatures:&#xA;* `View(Context context)`&#xA;* `View(Context context, AttributeSet attrs)`&#xA;* `View(Context context, AttributeSet attrs, int defStyle)`&#xA;&#xA;If your custom view needs to perform initialization which does not apply when used in a layout editor, you can surround the given code with a check to see if `View#isInEditMode()` is false, since that method will return `false` at runtime but true within a user interface editor.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourViewGroup.java"
            line="26"
            column="14"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Error"
        message="Custom view `CameraGLSurfaceView` overrides `onTouchEvent` but not `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\CameraGLSurfaceView.java"
            line="113"
            column="20"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Error"
        message="Custom view `HourView` overrides `onTouchEvent` but not `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourView.java"
            line="55"
            column="20"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Error"
        message="Custom view `HourViewGroup` overrides `onTouchEvent` but not `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourViewGroup.java"
            line="140"
            column="24"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Error"
        message="Custom view `RotateButton` overrides `onTouchEvent` but not `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\RotateButton.java"
            line="20"
            column="20"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Error"
        message="Custom view `SvgView` overrides `onTouchEvent` but not `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgView.java"
            line="263"
            column="20"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Error"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="135"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Error"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_motion2.xml"
            line="11"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Error"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\login_layout.xml"
            line="7"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Error"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\main_activity2_activity.xml"
            line="29"
            column="10"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Error"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\main_activity2_activity.xml"
            line="38"
            column="10"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Error"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\main_activity2_activity.xml"
            line="47"
            column="10"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Error"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\main_activity2_activity.xml"
            line="56"
            column="10"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Error"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\rotate_button.xml"
            line="8"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Error"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sun_run.xml"
            line="30"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Error"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sun_system.xml"
            line="9"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Error"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sun_system.xml"
            line="19"
            column="6"/>
    </issue>

    <issue
        id="LabelFor"
        severity="Error"
        message="Missing accessibility label: provide either a view with an `android:labelFor` that references this view or provide an `android:hint`"
        category="Accessibility"
        priority="2"
        summary="Missing accessibility label"
        explanation="Editable text fields should provide an `android:hint` or, provided your `minSdkVersion` is at least 17, they may be referenced by a view with a `android:labelFor` attribute.&#xA;&#xA;When using `android:labelFor`, be sure to provide an `android:text` or an `android:contentDescription`.&#xA;&#xA;If your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_surface_view.xml"
            line="9"
            column="6"/>
    </issue>

    <issue
        id="ByteOrderMark"
        severity="Error"
        message="Found byte-order-mark in the middle of a file"
        category="Internationalization"
        priority="8"
        summary="Byte order mark inside files"
        explanation="Lint will flag any byte-order-mark (BOM) characters it finds in the middle of a file. Since we expect files to be encoded with UTF-8 (see the EnforceUTF8 issue), the BOM characters are not necessary, and they are not handled correctly by all tools. For example, if you have a BOM as part of a resource name in one particular translation, that name will not be considered identical to the base resource&apos;s name and the translation will not be used."
        url="http://en.wikipedia.org/wiki/Byte_order_mark"
        urls="http://en.wikipedia.org/wiki/Byte_order_mark">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\AndroidManifest.xml"
            line="29"
            column="5"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Error"
        message="String literal in `setText` can not be translated. Use Android resources instead."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`&#xA;* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.&#xA;* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.&#xA;* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="http://developer.android.com/guide/topics/resources/localization.html"
        urls="http://developer.android.com/guide/topics/resources/localization.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="408"
            column="32"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Error"
        message="Do not concatenate text displayed with `setText`. Use resource string with placeholders."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`&#xA;* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.&#xA;* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.&#xA;* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="http://developer.android.com/guide/topics/resources/localization.html"
        urls="http://developer.android.com/guide/topics/resources/localization.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MapActivity.java"
            line="74"
            column="39"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Error"
        message="String literal in `setText` can not be translated. Use Android resources instead."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`&#xA;* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.&#xA;* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.&#xA;* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="http://developer.android.com/guide/topics/resources/localization.html"
        urls="http://developer.android.com/guide/topics/resources/localization.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SkinActivity.java"
            line="24"
            column="36"/>
    </issue>

    <issue
        id="SetTextI18n"
        severity="Error"
        message="String literal in `setText` can not be translated. Use Android resources instead."
        category="Internationalization"
        priority="6"
        summary="TextView Internationalization"
        explanation="When calling `TextView#setText`&#xA;* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.&#xA;* Do not pass a string literal (e.g. &quot;Hello&quot;) to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.&#xA;* Do not build messages by concatenating text chunks. Such messages can not be properly translated."
        url="http://developer.android.com/guide/topics/resources/localization.html"
        urls="http://developer.android.com/guide/topics/resources/localization.html">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\ThirdActivity.java"
            line="33"
            column="32"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;1&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_layout.xml"
            line="32"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;2&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_layout.xml"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;3&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_layout.xml"
            line="46"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;4&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_layout.xml"
            line="51"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;5&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_layout.xml"
            line="55"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;6&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_layout.xml"
            line="59"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;识别身份证号码&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="32"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;修复&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="37"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;下一张&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="42"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;搜素蓝牙&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="47"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;视频页&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="59"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;地图页&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="64"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;搜索WIFI&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="69"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;检查网络&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="74"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;开始录屏&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="87"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;结束录屏&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="92"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;截图&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="97"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;播放&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="102"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;声音换频&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="110"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;surface播放&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="116"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;自定义控件&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="122"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;闹钟&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_main.xml"
            line="130"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;你现在选择的地方是：&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_map.xml"
            line="58"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;1111&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_motion.xml"
            line="14"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;2222&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_motion.xml"
            line="23"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;开始&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_motion.xml"
            line="38"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;stop+count&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_motion1.xml"
            line="17"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;123&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_motion1.xml"
            line="27"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;hello world!&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_skin.xml"
            line="13"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;播放&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_surface_view.xml"
            line="26"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;暂停&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_surface_view.xml"
            line="31"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;重置&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_surface_view.xml"
            line="36"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;停止&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_surface_view.xml"
            line="41"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;show&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_tinker.xml"
            line="14"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;fix&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\activity_tinker.xml"
            line="21"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;TextView&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\blue_item_layout.xml"
            line="11"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;123&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\custom_relativelayout.xml"
            line="9"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;用户名: &quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\login_layout.xml"
            line="23"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot; 密 码  : &quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\login_layout.xml"
            line="40"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;start&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\main_activity2_activity.xml"
            line="78"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;stop&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\main_activity2_activity.xml"
            line="85"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;next&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\main_activity2_activity.xml"
            line="93"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;MainActivity2Fragment&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\main_activity2_fragment.xml"
            line="14"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;输入wifi密码: &quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sound_set_layout.xml"
            line="16"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;设置时间长为&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sound_set_layout.xml"
            line="34"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;0&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sound_set_layout.xml"
            line="40"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Error"
        message="Hardcoded string &quot;分钟&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sound_set_layout.xml"
            line="45"
            column="13"/>
    </issue>

    <issue
        id="LambdaLast"
        severity="Error"
        message="Functional interface parameters (such as parameter 1, &quot;source&quot;, in com.example.opencvexample.utils.BroadCastUtils.onStateChanged) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Lambda Parameters Last"
        explanation="To improve calling this code from Kotlin,&#xA;parameter types eligible for SAM conversion should be last."
        url="https://android.github.io/kotlin-guides/interop.html#lambda-parameters-last"
        urls="https://android.github.io/kotlin-guides/interop.html#lambda-parameters-last">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\BroadCastUtils.java"
            line="74"
            column="64"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\aspect\ActivityAopTest.java"
            line="36"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\aspect\ActivityAopTest.java"
            line="48"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\aspect\ActivityAopTest.java"
            line="58"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\AppUtils.java"
            line="14"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\AppUtils.java"
            line="14"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\AppUtils.java"
            line="18"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\AppUtils.java"
            line="18"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\AppUtils.java"
            line="18"
            column="53"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\AppUtils.java"
            line="22"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\AppUtils.java"
            line="22"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\ArrayUtils.java"
            line="9"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\ArrayUtils.java"
            line="9"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\ArrayUtils.java"
            line="9"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\BaseActivity.java"
            line="14"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\BaseActivity.java"
            line="34"
            column="24"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\BaseApplication.java"
            line="59"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\BaseApplication.java"
            line="67"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\enum_test\BasicOperation.java"
            line="35"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\enum_test\BasicOperation.java"
            line="38"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\BroadCastUtils.java"
            line="24"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\BroadCastUtils.java"
            line="24"
            column="59"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\BroadCastUtils.java"
            line="48"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\BroadCastUtils.java"
            line="48"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\BroadCastUtils.java"
            line="53"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\BroadCastUtils.java"
            line="53"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\BroadCastUtils.java"
            line="68"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\BroadCastUtils.java"
            line="68"
            column="48"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\BroadCastUtils.java"
            line="104"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\CameraGLSurfaceView.java"
            line="24"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\CameraGLSurfaceView.java"
            line="34"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\CameraGLSurfaceView.java"
            line="57"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\CameraGLSurfaceView.java"
            line="64"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\CameraGLSurfaceView.java"
            line="71"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\CameraGLSurfaceView.java"
            line="71"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\CameraGLSurfaceView.java"
            line="85"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\CameraGLSurfaceView.java"
            line="94"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\CameraGLSurfaceView.java"
            line="113"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\CameraHelper.java"
            line="22"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\CameraHelper.java"
            line="22"
            column="57"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\CameraHelper.java"
            line="29"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\CameraHelper.java"
            line="34"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\ClassForName.java"
            line="10"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\ClassLoadExample.java"
            line="25"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\soundDealwith\CosWave.java"
            line="15"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\soundDealwith\CosWave.java"
            line="15"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\CubeSharp.java"
            line="12"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\CubeView.java"
            line="68"
            column="21"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\CubeView.java"
            line="113"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\CubeView.java"
            line="136"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\CustomEditText.java"
            line="15"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\CustomEditText.java"
            line="15"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\CustomEditText.java"
            line="26"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\CustomEditText.java"
            line="46"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\CustomPlayVideoActivity.java"
            line="14"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\Static_enum\Data.java"
            line="6"
            column="6"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\Static_enum\Data.java"
            line="7"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\DataCompareUtils.java"
            line="26"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\DataCompareUtils.java"
            line="26"
            column="58"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\DayContainer.java"
            line="14"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\DayContainer.java"
            line="23"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\DayContainer.java"
            line="29"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\action_pattern\dutychain_pattern\Debug.java"
            line="5"
            column="18"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\action_pattern\dutychain_pattern\Debug.java"
            line="10"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\multiTread\Demo.java"
            line="4"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\Static_enum\Demo.java"
            line="5"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\Demo.java"
            line="6"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\enum_test\Demo.java"
            line="23"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\test\Demo.java"
            line="120"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\test\Demo.java"
            line="120"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\test\Demo.java"
            line="120"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\Static_enum\Demo1.java"
            line="5"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\Static_enum\DeviceBox.java"
            line="15"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\Static_enum\DeviceBox.java"
            line="19"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\DisplayUtil.java"
            line="7"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\DisplayUtil.java"
            line="11"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\DropSharp.java"
            line="6"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\action_pattern\dutychain_pattern\Error.java"
            line="5"
            column="18"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\action_pattern\dutychain_pattern\Error.java"
            line="10"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\Favourites.java"
            line="10"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\Favourites.java"
            line="10"
            column="49"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\Favourites.java"
            line="14"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\Favourites.java"
            line="14"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\FileUtils.java"
            line="15"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\FileUtils.java"
            line="15"
            column="50"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\FixUtils.java"
            line="21"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\FrameAnimation.java"
            line="17"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\FrameAnimation.java"
            line="43"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\FrameAnimation.java"
            line="43"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\FrameAnimation.java"
            line="59"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\Future_Pattern\FutureData.java"
            line="7"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\Future_Pattern\FutureData.java"
            line="19"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\GameSurfaceView.java"
            line="29"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\GameSurfaceView.java"
            line="48"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\GameSurfaceView.java"
            line="48"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\GameSurfaceView.java"
            line="57"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\GameSurfaceView.java"
            line="57"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\GameSurfaceView.java"
            line="57"
            column="49"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\GameSurfaceView.java"
            line="62"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\GameSurfaceView.java"
            line="62"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\GameSurfaceView.java"
            line="81"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\GameSurfaceView.java"
            line="84"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\GameSurfaceView.java"
            line="91"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\GetObserver.java"
            line="8"
            column="24"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\GetObserver.java"
            line="8"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\hook\HookExample.java"
            line="8"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourView.java"
            line="21"
            column="21"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourView.java"
            line="41"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourView.java"
            line="55"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourView.java"
            line="85"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourView.java"
            line="89"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourViewGroup.java"
            line="55"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourViewGroup.java"
            line="97"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourViewGroup.java"
            line="140"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourViewGroup.java"
            line="203"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourViewGroup.java"
            line="214"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourViewGroup.java"
            line="257"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourViewGroup.java"
            line="265"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourViewGroup.java"
            line="270"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourViewGroup.java"
            line="275"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourViewGroup.java"
            line="280"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourViewGroup.java"
            line="280"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourViewGroup.java"
            line="294"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourViewGroup.java"
            line="299"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\HourViewGroup.java"
            line="299"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\ImageShowActivity.java"
            line="20"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\action_pattern\dutychain_pattern\Info.java"
            line="4"
            column="17"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\action_pattern\dutychain_pattern\Info.java"
            line="8"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\InjectManage.java"
            line="21"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\JavaApi.java"
            line="7"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\JavaApi.java"
            line="7"
            column="49"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\JavaApi.java"
            line="7"
            column="64"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\JavaApi.java"
            line="8"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\JavaApi.java"
            line="8"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\JavaApi.java"
            line="8"
            column="61"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\JavaApi.java"
            line="14"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\JavaApi.java"
            line="15"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\JavaApi.java"
            line="15"
            column="59"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\JavaApi.java"
            line="15"
            column="71"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\JavaApi.java"
            line="15"
            column="85"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\JavaApi.java"
            line="16"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\JavaApi.java"
            line="16"
            column="50"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\JavaApi.java"
            line="17"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\JavaApi.java"
            line="18"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\JavaApi.java"
            line="18"
            column="51"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\JavaApi.java"
            line="20"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\JavaApi.java"
            line="20"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\JavaApi.java"
            line="20"
            column="67"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\LayoutActivity.java"
            line="10"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\multiTread\Lock\LockDemo.java"
            line="11"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\LockReceiver.java"
            line="11"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\LockReceiver.java"
            line="11"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\LockReceiver.java"
            line="16"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\LockReceiver.java"
            line="16"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\action_pattern\dutychain_pattern\LogHandler.java"
            line="4"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\action_pattern\dutychain_pattern\LogHandler.java"
            line="5"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\action_pattern\dutychain_pattern\LogHandler.java"
            line="7"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\action_pattern\dutychain_pattern\LogHandler.java"
            line="11"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\action_pattern\dutychain_pattern\LogHandler.java"
            line="11"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\action_pattern\dutychain_pattern\LogHandler.java"
            line="20"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="265"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1204"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1228"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1228"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1354"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1369"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity.java"
            line="1369"
            column="64"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MainActivity2.java"
            line="41"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\ui\mainactivity2\MainActivity2Fragment.java"
            line="19"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MapActivity.java"
            line="47"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MapActivity.java"
            line="113"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MapSelectPostion.java"
            line="4"
            column="17"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MotionActivity.java"
            line="48"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\MyGLSurfaceView.java"
            line="10"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\MyGLSurfaceView.java"
            line="17"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\MyGLSurfaceView.java"
            line="17"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MyListView.java"
            line="12"
            column="23"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MyListView.java"
            line="16"
            column="23"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MyListView.java"
            line="16"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MyListView.java"
            line="20"
            column="23"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MyListView.java"
            line="20"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\MyMatrix.java"
            line="9"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\MyMatrix.java"
            line="24"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\MyObervable.java"
            line="26"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\MyObervable.java"
            line="26"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\MyObervable.java"
            line="50"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\MyObervable.java"
            line="60"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\MyObervable.java"
            line="66"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\MyObervable.java"
            line="66"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\MyObervable.java"
            line="78"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\MyObervable.java"
            line="86"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\MyObervable.java"
            line="86"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\MyObervable.java"
            line="90"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\MyObervable.java"
            line="90"
            column="61"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\MyRelativeLayout.java"
            line="20"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\MyRelativeLayout.java"
            line="25"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\MyRelativeLayout.java"
            line="25"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\MyRelativeLayout.java"
            line="69"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\MyRelativeLayout.java"
            line="69"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\MyRelativeLayout.java"
            line="74"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\MyRelativeLayout.java"
            line="74"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\MyRenderer.java"
            line="15"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\MyRenderer.java"
            line="15"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\MyRenderer.java"
            line="25"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\MyRenderer.java"
            line="35"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\MyRenderer.java"
            line="56"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\service\MyService.java"
            line="14"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\service\MyService.java"
            line="18"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\service\MyService.java"
            line="23"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\MyView.java"
            line="28"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\MyView.java"
            line="33"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\MyView.java"
            line="33"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\MyView.java"
            line="38"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\MyView.java"
            line="38"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\MyView.java"
            line="87"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\MyView.java"
            line="119"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\MyView.java"
            line="129"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\MyView.java"
            line="179"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\MyView.java"
            line="189"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\MyViewPager.java"
            line="21"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\NetworkCallbackImp.java"
            line="17"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\NetworkCallbackImp.java"
            line="23"
            column="24"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\NetworkCallbackImp.java"
            line="30"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\NetworkCallbackImp.java"
            line="30"
            column="56"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\aspect\NetworkCheckAspect.java"
            line="30"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\build_pattern\Notification.java"
            line="9"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\build_pattern\Notification.java"
            line="22"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\build_pattern\Notification.java"
            line="27"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\build_pattern\Notification.java"
            line="32"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\build_pattern\Notification.java"
            line="32"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\build_pattern\Notification.java"
            line="37"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\build_pattern\Notification.java"
            line="37"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\build_pattern\Notification.java"
            line="42"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\ParamTest.java"
            line="8"
            column="22"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\defendcopy\Period.java"
            line="9"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\defendcopy\Period.java"
            line="9"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\defendcopy\Period.java"
            line="17"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\defendcopy\Period.java"
            line="22"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\PostObservable.java"
            line="18"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\skin\QDPreferenceManager.java"
            line="38"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\skin\QDPreferenceManager.java"
            line="38"
            column="57"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\skin\QDSkinManager.java"
            line="17"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\ReflectUtils.java"
            line="14"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\ReflectUtils.java"
            line="14"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\ReflectUtils.java"
            line="18"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\ReflectUtils.java"
            line="18"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\ReflectUtils.java"
            line="22"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\ReflectUtils.java"
            line="22"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\ReflectUtils.java"
            line="22"
            column="60"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\RotateButton.java"
            line="14"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\RotateButton.java"
            line="14"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\RotateButton.java"
            line="20"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\ScreenRecorder.java"
            line="12"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\ScreenRecorder.java"
            line="17"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SecondActivity.java"
            line="16"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\Future_Pattern\Server.java"
            line="4"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\ShaderUtil.java"
            line="14"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\ShaderUtil.java"
            line="14"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\ShaderUtil.java"
            line="31"
            column="50"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\ShaderUtil.java"
            line="52"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\utils\ShaderUtil.java"
            line="52"
            column="58"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\soundDealwith\SinWave.java"
            line="15"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\soundDealwith\SinWave.java"
            line="15"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\SingleSharp.java"
            line="21"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\SingleSharp.java"
            line="29"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SkinActivity.java"
            line="18"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\action_pattern\strategy\Sortor.java"
            line="7"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\action_pattern\strategy\Sortor.java"
            line="7"
            column="21"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\action_pattern\strategy\Sortor.java"
            line="7"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\Sprite.java"
            line="36"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\Sprite.java"
            line="40"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\Sprite.java"
            line="150"
            column="22"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\Student.java"
            line="6"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\Student.java"
            line="11"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\Student.java"
            line="15"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SurfaceViewActivity.java"
            line="33"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SurfaceViewActivity.java"
            line="108"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SurfaceViewActivity.java"
            line="181"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgItem.java"
            line="24"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgItem.java"
            line="30"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgItem.java"
            line="34"
            column="20"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgItem.java"
            line="34"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgItem.java"
            line="42"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgItem.java"
            line="42"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgView.java"
            line="78"
            column="20"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgView.java"
            line="78"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgView.java"
            line="84"
            column="20"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgView.java"
            line="84"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgView.java"
            line="91"
            column="22"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgView.java"
            line="91"
            column="49"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgView.java"
            line="263"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgView.java"
            line="309"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgView.java"
            line="337"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\SvgView.java"
            line="341"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\Test.java"
            line="7"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\asm\Test.java"
            line="8"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\looptest_rxjava\Test.java"
            line="27"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\hook\TestA.java"
            line="23"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\hook\TestA.java"
            line="45"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\ThirdActivity.java"
            line="28"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\ThirdActivity.java"
            line="55"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\ThirdActivity.java"
            line="65"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\multiTread\ThreadPoolManager.java"
            line="23"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\multiTread\ThreadPoolManager.java"
            line="30"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\multiTread\ThreadPoolManager.java"
            line="40"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\multiTread\ThreadPoolManager.java"
            line="62"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\TinkerActivity.java"
            line="22"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\TinkerActivity.java"
            line="78"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\TinkerActivity.java"
            line="83"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\opengl\Triangle.java"
            line="118"
            column="22"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\User.java"
            line="6"
            column="24"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\User.java"
            line="11"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\observable\User.java"
            line="15"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\WeekContainer.java"
            line="39"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\WeekContainer.java"
            line="75"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\WeekContainer.java"
            line="115"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        severity="Error"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        category="Interoperability:Kotlin Interoperability"
        priority="6"
        summary="Unknown nullness"
        explanation="To improve referencing this code from Kotlin, consider adding&#xA;explicit nullness information here with either `@NonNull` or `@Nullable`.&#xA;&#xA;You can set the environment variable&#xA;    `ANDROID_LINT_NULLNESS_IGNORE_DEPRECATED=true`&#xA;if you want lint to ignore classes and members that have been annotated with&#xA;`@Deprecated`."
        url="https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        urls="https://android.github.io/kotlin-guides/interop.html#nullability-annotations">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\java\com\example\opencvexample\customview\WeekContainer.java"
            line="125"
            column="42"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Error"
        message="When you define `paddingLeft` you should probably also define `paddingRight` for right-to-left symmetry"
        category="Internationalization:Bidirectional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry.">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sample_my_view.xml"
            line="11"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_alignParentLeft` with `android:layout_alignParentStart=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\main_activity2_activity.xml"
            line="52"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_alignParentRight` with `android:layout_alignParentEnd=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\main_activity2_activity.xml"
            line="61"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:paddingLeft` with `android:paddingStart=&quot;20dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)">
        <location
            file="D:\OpenCV-android-sdk\OpenCVExample\app\src\main\res\layout\sample_my_view.xml"
            line="11"
            column="9"/>
    </issue>

</issues>
